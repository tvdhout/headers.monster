server_tokens off;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header Strict-Transport-Security "max-age=31536000" always;
add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none'" always;
add_header Referrer-Policy "strict-origin" always;
add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";

ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /etc/letsencrypt/live/headers.monster/fullchain.pem;

# http://headers.monster -> https://headers.monster
server {
    listen 80;
    listen [::]:80;
    server_name headers.monster;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}


# serve https://headers.monster
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name headers.monster;

    ssl_certificate /etc/letsencrypt/live/headers.monster/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/headers.monster/privkey.pem;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets on;

    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_prefer_server_ciphers on;

    # Example location for a Flask application running on port 8080
    location /if {	
	    if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        include uwsgi_params;
        uwsgi_pass flask:8080;
        uwsgi_ignore_client_abort on;
    }
    
    location / {	
        include uwsgi_params;
        uwsgi_pass flask:8080;
        uwsgi_ignore_client_abort on;
    }
}
